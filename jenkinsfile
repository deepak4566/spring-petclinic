pipeline {
    agent any

    stages {
        stage('Maven Build Artifact') {
            steps {
                sh 'mvn clean package -DskipTests=true'
            }
        }

        stage('SonarCloud Scan') {
            environment {
                SONAR_TOKEN = credentials('sonarcloud_token_id')
            }
            steps {
                sh '''
                    mvn sonar:sonar \
                      -Dsonar.projectKey=your_project_key \
                      -Dsonar.organization=your_org_key \
                      -Dsonar.host.url=https://sonarcloud.io \
                      -Dsonar.login=$SONAR_TOKEN
                '''
            }
        }

        stage('Trivy FS Scan') {
            steps {
                sh "trivy fs . --scanners config,secret,vuln > trivyfs.txt"
            }
        }

        stage('SBOM Generation') {
            steps {
                sh '''
                    curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
                    syft . -o cyclonedx-json > sbom.json
                '''
            }
        }

        stage('SCA Scan (Dependencies)') {
            steps {
                sh '''
                    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
                    trivy sbom sbom.json > sca_scan.txt
                '''
            }
        }

        stage('Building a Docker Image') {
            steps {
                sh "docker build -t deepak8934/petapp:${BUILD_NUMBER} ."
            }
        }

        stage('Trivy Image Scan') {
            steps {
                sh "trivy image deepak8934/petapp:${BUILD_NUMBER} --scanners vuln > trivyimage.txt"
            }
        }

        stage('Docker Image Push') {
            steps {
                withDockerRegistry(credentialsId: 'dockercred', url: '') {
                    sh "docker push deepak8934/petapp:${BUILD_NUMBER}"
                }
            }
        }
    }
}

